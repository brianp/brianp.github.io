<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>workshops on { always: &#39;coding&#39; }</title>
    <link>https://alwayscoding.ca/categories/workshops/</link>
    <description>Recent content in workshops on { always: &#39;coding&#39; }</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Sep 2016 10:00:00 +0000</lastBuildDate><atom:link href="https://alwayscoding.ca/categories/workshops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Traits and Threads Workshop</title>
      <link>https://alwayscoding.ca/momentos/2016/09/09/traits-and-threads-workshop/</link>
      <pubDate>Fri, 09 Sep 2016 10:00:00 +0000</pubDate>
      
      <guid>https://alwayscoding.ca/momentos/2016/09/09/traits-and-threads-workshop/</guid>
      <description>These are raw notes taken at RustConf during the “Traits and Threads” workshop put on by Aaron Turon
All Exercises
 Methods are function that accept self &amp;amp;self.items == &amp;amp;(self.items) where the borrow (&amp;amp;) is for the item, not for self. Structs have no default value, requires creating all values. mut as mute not like a mixed breed dog   Abstraction: The Plan
 Generics Traits As Interfaces For Code Resuse For Perator Overloading Trait Objects   Traits are rusts interfaces.</description>
    </item>
    
  </channel>
</rss>
