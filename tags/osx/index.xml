<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>osx on { always: &#39;coding&#39; }</title>
    <link>https://alwayscoding.ca/tags/osx/</link>
    <description>Recent content in osx on { always: &#39;coding&#39; }</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Jan 2022 18:18:00 +0000</lastBuildDate><atom:link href="https://alwayscoding.ca/tags/osx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gpg failed to sign the data</title>
      <link>https://alwayscoding.ca/momentos/2022/01/05/gpg-failed-to-sign-the-data/</link>
      <pubDate>Wed, 05 Jan 2022 18:18:00 +0000</pubDate>
      
      <guid>https://alwayscoding.ca/momentos/2022/01/05/gpg-failed-to-sign-the-data/</guid>
      <description>I get this terminal error about every three to six months:
error: gpg failed to sign the data fatal: failed to write commit object When I see it I think &amp;ldquo;I really should have written down the problem last time&amp;rdquo;. So here we are, ready and willing to document.
 The issue for me is that I set short expiration times for my gpg keys.
 To verify my key is expired I run: $ gpg -K --keyid-format SHORT and get results like below:</description>
    </item>
    
    <item>
      <title>Cross compilation to OSX with Rust</title>
      <link>https://alwayscoding.ca/momentos/2016/05/08/cross-compilation-to-osx-with-rust/</link>
      <pubDate>Sun, 08 May 2016 10:06:42 +0000</pubDate>
      
      <guid>https://alwayscoding.ca/momentos/2016/05/08/cross-compilation-to-osx-with-rust/</guid>
      <description>It started with Muxed. I was excited to get a working first build, but despite my development machine being a MacBook Air, I develop most in VM&amp;rsquo;s using vagrant. My native builds were all linux based. It would be easy enough to move the code to an OSX machine and compile there but I do not like build tools on my native machine. And that would simply be too easy.</description>
    </item>
    
  </channel>
</rss>
